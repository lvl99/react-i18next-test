// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches mount snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <TestI18nComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "intl": Object {
          "changeLanguage": [Function],
        },
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
        >
          <header
            class="App-header"
          >
            <img
              alt="logo"
              class="App-logo"
              src="logo.svg"
            />
            <h1>
              welcome.toReact
            </h1>
            <p>
              App language: 
              <br />
              i18n currentLanguage: 
            </p>
            <button>
              Language: EN
            </button>
            <button>
              Language: FR
            </button>
            <h3>
              this.is.a.test
            </h3>
            <h4>
              this.is.another.test
            </h4>
            <p>
              Current component language: 
              <br />
              i18n currentLanguage: 
            </p>
            <button>
              Language: EN
            </button>
            <button>
              Language: FR
            </button>
          </header>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <header
            className="App-header"
          >
            <img
              alt="logo"
              className="App-logo"
              src="logo.svg"
            />
            <h1>
              welcome.toReact
            </h1>
            <p>
              App language: 
              <br />
              i18n currentLanguage: 
            </p>
            <button
              onClick={[Function]}
            >
              Language: EN
            </button>
            <button
              onClick={[Function]}
            >
              Language: FR
            </button>
            <Changer />
          </header>,
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <header
              class="App-header"
            >
              <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />
              <h1>
                welcome.toReact
              </h1>
              <p>
                App language: 
                <br />
                i18n currentLanguage: 
              </p>
              <button>
                Language: EN
              </button>
              <button>
                Language: FR
              </button>
              <h3>
                this.is.a.test
              </h3>
              <h4>
                this.is.another.test
              </h4>
              <p>
                Current component language: 
                <br />
                i18n currentLanguage: 
              </p>
              <button>
                Language: EN
              </button>
              <button>
                Language: FR
              </button>
            </header>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />,
                <h1>
                  welcome.toReact
                </h1>,
                <p>
                  App language: 
                  <br />
                  i18n currentLanguage: 
                </p>,
                <button
                  onClick={[Function]}
                >
                  Language: EN
                </button>,
                <button
                  onClick={[Function]}
                >
                  Language: FR
                </button>,
                <Changer />,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <h1>
                  welcome.toReact
                </h1>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "welcome.toReact",
                },
                "ref": null,
                "rendered": Array [
                  "welcome.toReact",
                ],
                "type": "h1",
              },
              Object {
                "instance": <p>
                  App language: 
                  <br />
                  i18n currentLanguage: 
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "App language: ",
                    undefined,
                    <br />,
                    "i18n currentLanguage: ",
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "App language: ",
                  Object {
                    "instance": <br />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "br",
                  },
                  "i18n currentLanguage: ",
                ],
                "type": "p",
              },
              Object {
                "instance": <button>
                  Language: EN
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Language: EN",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  "Language: EN",
                ],
                "type": "button",
              },
              Object {
                "instance": <button>
                  Language: FR
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Language: FR",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  "Language: FR",
                ],
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "language": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <h3>
                      this.is.a.test
                    </h3>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "this.is.a.test",
                    },
                    "ref": null,
                    "rendered": Array [
                      "this.is.a.test",
                    ],
                    "type": "h3",
                  },
                  Object {
                    "instance": <h4>
                      this.is.another.test
                    </h4>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "this.is.another.test",
                    },
                    "ref": null,
                    "rendered": Array [
                      "this.is.another.test",
                    ],
                    "type": "h4",
                  },
                  Object {
                    "instance": <p>
                      Current component language: 
                      <br />
                      i18n currentLanguage: 
                    </p>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Current component language: ",
                        undefined,
                        <br />,
                        "i18n currentLanguage: ",
                        undefined,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Current component language: ",
                      Object {
                        "instance": <br />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "br",
                      },
                      "i18n currentLanguage: ",
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": <button>
                      Language: EN
                    </button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Language: EN",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Language: EN",
                    ],
                    "type": "button",
                  },
                  Object {
                    "instance": <button>
                      Language: FR
                    </button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Language: FR",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Language: FR",
                    ],
                    "type": "button",
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "header",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "intl": Object {
            "changeLanguage": [Function],
          },
          "t": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="App"
          >
            <header
              class="App-header"
            >
              <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />
              <h1>
                welcome.toReact
              </h1>
              <p>
                App language: 
                <br />
                i18n currentLanguage: 
              </p>
              <button>
                Language: EN
              </button>
              <button>
                Language: FR
              </button>
              <h3>
                this.is.a.test
              </h3>
              <h4>
                this.is.another.test
              </h4>
              <p>
                Current component language: 
                <br />
                i18n currentLanguage: 
              </p>
              <button>
                Language: EN
              </button>
              <button>
                Language: FR
              </button>
            </header>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <header
              className="App-header"
            >
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
              />
              <h1>
                welcome.toReact
              </h1>
              <p>
                App language: 
                <br />
                i18n currentLanguage: 
              </p>
              <button
                onClick={[Function]}
              >
                Language: EN
              </button>
              <button
                onClick={[Function]}
              >
                Language: FR
              </button>
              <Changer />
            </header>,
            "className": "App",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <header
                class="App-header"
              >
                <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />
                <h1>
                  welcome.toReact
                </h1>
                <p>
                  App language: 
                  <br />
                  i18n currentLanguage: 
                </p>
                <button>
                  Language: EN
                </button>
                <button>
                  Language: FR
                </button>
                <h3>
                  this.is.a.test
                </h3>
                <h4>
                  this.is.another.test
                </h4>
                <p>
                  Current component language: 
                  <br />
                  i18n currentLanguage: 
                </p>
                <button>
                  Language: EN
                </button>
                <button>
                  Language: FR
                </button>
              </header>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
                  />,
                  <h1>
                    welcome.toReact
                  </h1>,
                  <p>
                    App language: 
                    <br />
                    i18n currentLanguage: 
                  </p>,
                  <button
                    onClick={[Function]}
                  >
                    Language: EN
                  </button>,
                  <button
                    onClick={[Function]}
                  >
                    Language: FR
                  </button>,
                  <Changer />,
                ],
                "className": "App-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <img
                    alt="logo"
                    class="App-logo"
                    src="logo.svg"
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "logo",
                    "className": "App-logo",
                    "src": "logo.svg",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "img",
                },
                Object {
                  "instance": <h1>
                    welcome.toReact
                  </h1>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "welcome.toReact",
                  },
                  "ref": null,
                  "rendered": Array [
                    "welcome.toReact",
                  ],
                  "type": "h1",
                },
                Object {
                  "instance": <p>
                    App language: 
                    <br />
                    i18n currentLanguage: 
                  </p>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "App language: ",
                      undefined,
                      <br />,
                      "i18n currentLanguage: ",
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "App language: ",
                    Object {
                      "instance": <br />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "br",
                    },
                    "i18n currentLanguage: ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": <button>
                    Language: EN
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Language: EN",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Language: EN",
                  ],
                  "type": "button",
                },
                Object {
                  "instance": <button>
                    Language: FR
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Language: FR",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Language: FR",
                  ],
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "language": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <h3>
                        this.is.a.test
                      </h3>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "this.is.a.test",
                      },
                      "ref": null,
                      "rendered": Array [
                        "this.is.a.test",
                      ],
                      "type": "h3",
                    },
                    Object {
                      "instance": <h4>
                        this.is.another.test
                      </h4>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "this.is.another.test",
                      },
                      "ref": null,
                      "rendered": Array [
                        "this.is.another.test",
                      ],
                      "type": "h4",
                    },
                    Object {
                      "instance": <p>
                        Current component language: 
                        <br />
                        i18n currentLanguage: 
                      </p>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Current component language: ",
                          undefined,
                          <br />,
                          "i18n currentLanguage: ",
                          undefined,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Current component language: ",
                        Object {
                          "instance": <br />,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": Array [
                            undefined,
                          ],
                          "type": "br",
                        },
                        "i18n currentLanguage: ",
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": <button>
                        Language: EN
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Language: EN",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Language: EN",
                      ],
                      "type": "button",
                    },
                    Object {
                      "instance": <button>
                        Language: FR
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Language: FR",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Language: FR",
                      ],
                      "type": "button",
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "header",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`matches shallow snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TestI18nComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "intl": Object {
        "changeLanguage": [Function],
      },
      "t": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "intl": Object {
          "changeLanguage": [Function],
        },
        "t": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
